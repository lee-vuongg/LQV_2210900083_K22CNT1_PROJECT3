package com.lqv.controllers;

import com.lqv.dao.LQV_QuanTriVienDAO;
import com.lqv.models.LQV_QuanTriVien;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;

@WebServlet("/quantrivien")
public class LQV_QuanTriVienServlet extends HttpServlet {
    private LQV_QuanTriVienDAO quanTriVienDAO;

    @Override
    public void init() throws ServletException {
        quanTriVienDAO = new LQV_QuanTriVienDAO();
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
        String action = request.getParameter("action");
        if (action == null) action = "list";

        System.out.println("üìù GET Action: " + action); // Debug log

        try {
            switch (action) {
                case "list":
                    listQuanTriVien(request, response);
                    break;
                case "edit":
                    showEditForm(request, response);
                    break;
                case "insert":
                    request.getRequestDispatcher("views/quantrivien/pages/admin/add.jsp").forward(request, response);
                    break;
                case "delete":
                    deleteQuanTriVien(request, response);
                    break;
                case "logout":
                    logout(request, response);
                    break;
                default:
                    System.out.println("‚ö†Ô∏è Action kh√¥ng h·ª£p l·ªá: " + action);
                    response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Action kh√¥ng h·ª£p l·ªá!");
                    break;
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "ƒê√£ x·∫£y ra l·ªói h·ªá th·ªëng!");
        }
    }


    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
        String action = request.getParameter("action");

        if (action == null) {
            System.out.println("‚ö†Ô∏è Thi·∫øu tham s·ªë action!");
            response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Thi·∫øu tham s·ªë action!");
            return;
        }

        System.out.println("üìù POST Action: " + action); // Debug log

        try {
        	switch (action) {
            case "insert":
                insertQuanTriVien(request, response);
                break;
            case "update":
                updateQuanTriVien(request, response);
                break;
            case "edit":
                showEditForm(request, response); // Th√™m case "edit"
                break;
            case "login":
                login(request, response);
                break;
            default:
                System.out.println("‚ö†Ô∏è Action kh√¥ng h·ª£p l·ªá: " + action);
                response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Action kh√¥ng h·ª£p l·ªá!");
                break;
        }

        } catch (Exception e) {
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "ƒê√£ x·∫£y ra l·ªói h·ªá th·ªëng!");
        }
    }


    private void listQuanTriVien(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        List<LQV_QuanTriVien> danhSachQTV = quanTriVienDAO.getAll();
        request.setAttribute("danhSachQTV", danhSachQTV);
        request.getRequestDispatcher("views/quantrivien/pages/admin/list.jsp").forward(request, response);
    }

    private void showEditForm(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int id = Integer.parseInt(request.getParameter("id"));
        LQV_QuanTriVien qtv = quanTriVienDAO.getById(id);
        request.setAttribute("quanTriVien", qtv);
        request.getRequestDispatcher("views/quantrivien/pages/admin/edit.jsp").forward(request, response);
    }

    private void insertQuanTriVien(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
        try {
            // L·∫•y d·ªØ li·ªáu t·ª´ form
            String taiKhoan = request.getParameter("taiKhoan");
            String matKhau = request.getParameter("matKhau");
            String trangThaiStr = request.getParameter("trangThai");

            // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
            if (taiKhoan == null || taiKhoan.trim().isEmpty() ||
                matKhau == null || matKhau.trim().isEmpty() ||
                trangThaiStr == null) {

                request.setAttribute("error", "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
                request.getRequestDispatcher("views/quantrivien/pages/admin/add.jsp").forward(request, response);
                return;
            }

            boolean trangThai = Boolean.parseBoolean(trangThaiStr);

            // Ki·ªÉm tra t√†i kho·∫£n ƒë√£ t·ªìn t·∫°i ch∆∞a
            if (quanTriVienDAO.isUsernameExist(taiKhoan)) {
                request.setAttribute("error", "T√†i kho·∫£n ƒë√£ t·ªìn t·∫°i!");
                request.getRequestDispatcher("views/quantrivien/pages/admin/add.jsp").forward(request, response);
                return;
            }

            // T·∫°o ƒë·ªëi t∆∞·ª£ng qu·∫£n tr·ªã vi√™n
            LQV_QuanTriVien qtv = new LQV_QuanTriVien(0, taiKhoan, matKhau, trangThai, null, null);

            // Th√™m v√†o database
            boolean result = quanTriVienDAO.insert(qtv);
            if (result) {
                request.getSession().setAttribute("success", "Th√™m qu·∫£n tr·ªã vi√™n th√†nh c√¥ng!");
            } else {
                request.setAttribute("error", "Th√™m qu·∫£n tr·ªã vi√™n th·∫•t b·∫°i!");
                request.getRequestDispatcher("views/quantrivien/pages/admin/add.jsp").forward(request, response);
                return;
            }

            // Chuy·ªÉn h∆∞·ªõng v·ªÅ danh s√°ch
            response.sendRedirect("quantrivien?action=list");
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "ƒê√£ x·∫£y ra l·ªói h·ªá th·ªëng!");
            request.getRequestDispatcher("views/quantrivien/pages/admin/add.jsp").forward(request, response);
        }
    }


    private void updateQuanTriVien(HttpServletRequest request, HttpServletResponse response)
            throws IOException, ServletException {
        try {
            int id = Integer.parseInt(request.getParameter("id"));
            String taiKhoan = request.getParameter("taiKhoan");
            String matKhau = request.getParameter("matKhau");
            String trangThaiStr = request.getParameter("trangThai");

            // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
            if (taiKhoan == null || taiKhoan.trim().isEmpty() ||
                matKhau == null || matKhau.trim().isEmpty() ||
                trangThaiStr == null) {

                request.setAttribute("error", "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
                showEditForm(request, response);
                return;
            }

            boolean trangThai = Boolean.parseBoolean(trangThaiStr);

            // T·ª± ƒë·ªông c·∫≠p nh·∫≠t ng√†y s·ª≠a
            Date ngaySua = new Date();

            // L·∫•y th√¥ng tin qu·∫£n tr·ªã vi√™n hi·ªán t·∫°i t·ª´ DB
            LQV_QuanTriVien qtvHienTai = quanTriVienDAO.getById(id);
            if (qtvHienTai == null) {
                request.setAttribute("error", "Kh√¥ng t√¨m th·∫•y qu·∫£n tr·ªã vi√™n!");
                showEditForm(request, response);
                return;
            }

            // T·∫°o ƒë·ªëi t∆∞·ª£ng qu·∫£n tr·ªã vi√™n v·ªõi th√¥ng tin m·ªõi
            LQV_QuanTriVien qtvMoi = new LQV_QuanTriVien(id, taiKhoan, matKhau, trangThai, qtvHienTai.getLQV_ngay_tao(), ngaySua);

            // Th·ª±c hi·ªán c·∫≠p nh·∫≠t
            boolean result = quanTriVienDAO.update(qtvMoi);

            if (result) {
                request.getSession().setAttribute("success", "C·∫≠p nh·∫≠t qu·∫£n tr·ªã vi√™n th√†nh c√¥ng!");
            } else {
                request.setAttribute("error", "C·∫≠p nh·∫≠t qu·∫£n tr·ªã vi√™n th·∫•t b·∫°i!");
                showEditForm(request, response);
                return;
            }

            // Chuy·ªÉn h∆∞·ªõng v·ªÅ danh s√°ch
            response.sendRedirect("quantrivien?action=list");

        } catch (NumberFormatException e) {
            e.printStackTrace();
            request.setAttribute("error", "ID kh√¥ng h·ª£p l·ªá!");
            showEditForm(request, response);
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh c·∫≠p nh·∫≠t!");
            showEditForm(request, response);
        }
    }

    private void deleteQuanTriVien(HttpServletRequest request, HttpServletResponse response) throws IOException {
        try {
            int id = Integer.parseInt(request.getParameter("id"));
            System.out.println("üóë ƒêang x√≥a qu·∫£n tr·ªã vi√™n ID: " + id); // Debug log

            LQV_QuanTriVienDAO dao = new LQV_QuanTriVienDAO();
            boolean success = dao.delete(id);

            if (success) {
                System.out.println("‚úÖ X√≥a th√†nh c√¥ng ID: " + id);
                response.getWriter().write("success");
            } else {
                System.out.println("‚ùå X√≥a th·∫•t b·∫°i ID: " + id);
                response.getWriter().write("fail");
            }
        } catch (NumberFormatException e) {
            System.out.println("‚ö†Ô∏è L·ªói parse ID: " + e.getMessage());
            response.getWriter().write("fail");
        } catch (Exception e) {
            e.printStackTrace();
            response.getWriter().write("fail");
        }
    }
    private void login(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String taiKhoan = request.getParameter("taiKhoan");
        String matKhau = request.getParameter("matKhau");

        // Ki·ªÉm tra n·∫øu t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u r·ªóng
        if (taiKhoan == null || matKhau == null || taiKhoan.trim().isEmpty() || matKhau.trim().isEmpty()) {
            System.out.println("‚ö†Ô∏è T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u b·ªã b·ªè tr·ªëng!");
            request.setAttribute("error", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß t√†i kho·∫£n v√† m·∫≠t kh·∫©u!");
            request.getRequestDispatcher("views/login.jsp").forward(request, response);
            return;
        }

        // Debug: In ra console ƒë·ªÉ ki·ªÉm tra th√¥ng tin nh·∫≠p v√†o
        System.out.println("üìå ƒêƒÉng nh·∫≠p v·ªõi: " + taiKhoan + " / " + matKhau);

        LQV_QuanTriVien qtv = quanTriVienDAO.login(taiKhoan, matKhau);

        if (qtv != null) {
            System.out.println("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng! T√†i kho·∫£n: " + qtv.getLQV_tai_khoan());
            HttpSession session = request.getSession();
            session.setAttribute("admin", qtv);
            response.sendRedirect(request.getContextPath() + "/views/admin.jsp");
        } else {
            System.out.println("‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i! Sai t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u.");
            request.setAttribute("error", "Sai t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u!");
            request.getRequestDispatcher("views/login.jsp").forward(request, response);
        }
    }

    private void logout(HttpServletRequest request, HttpServletResponse response) throws IOException {
        HttpSession session = request.getSession();
        if (session != null) {
            session.invalidate();
        }
        System.out.println("üö™ ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
        response.sendRedirect(request.getContextPath() + "/views/index.jsp");
    }
}
